<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd  http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket.xsd">
    <!--只能扫描controller 这个包下面所有类的实例交给spring容器管理-->
    <context:component-scan base-package="com.*.*.controller"/>
    <!--  webSocket包扫描进Spring容器管理  -->
    <context:component-scan base-package="com.*.*.springwebsocket"/>
    <!--mvc:annotation-driven-->
    <mvc:annotation-driven />
    <!--    API拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--
                /**的意思是所有文件夹及里面的子文件夹
                /*是所有文件夹，不含子文件夹
                /是web项目的根目录
              -->
            <mvc:mapping path="/**" />
            <!-- 需排除拦截的地址 -->
              <mvc:exclude-mapping path="/user/test"/>
            <mvc:exclude-mapping path="/user/saveSESSION"/>
            <mvc:exclude-mapping path="/user/getSESSION"/>
            <!--      websocket测试放行      -->
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/login01"/>
            <mvc:exclude-mapping path="/chat"/>
            <mvc:exclude-mapping path="/send02"/>
            <mvc:exclude-mapping path="/websocket/socketServer"/>
            <mvc:exclude-mapping path="/sockjs/socketServer"/>
            <bean id="LoginInterceptor" class="com.ldj.demo.interceptor.LoginInterceptor"></bean> <!--这个类就是我们自定义的Interceptor -->
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  -->
    </mvc:interceptors>
    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
</beans>
